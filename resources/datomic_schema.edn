{:olyp/main-schema
 {:txes
  [[{:db/id #db/id[:db.part/db]
     :db/ident :user/public-id
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db/unique :db.unique/value
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :user/email
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db/unique :db.unique/value
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :user/name
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :user/customer
     :db/valueType :db.type/ref
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :user/bcrypt-password
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :user/auth-token
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}




    {:db/id #db/id[:db.part/db]
     :db/ident :customer/public-id
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db/unique :db.unique/value
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer/type
     :db/valueType :db.type/ref
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/user] :db/ident :customer.type/company}
    {:db/id #db/id[:db.part/user] :db/ident :customer.type/person}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer/brreg-id
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer/name
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer/address
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer/zip
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer/city
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer/contact-person-name
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer/contact-person-email
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer/contact-person-phone
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}





    {:db/id #db/id[:db.part/db]
     :db/ident :reservable-room/public-id
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db/unique :db.unique/value
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :reservable-room/name
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}




    {:db/id #db/id[:db.part/db]
     :db/ident :room-reservation/public-id
     :db/valueType :db.type/string
     :db/unique :db.unique/value
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :room-reservation/reservable-room
     :db/valueType :db.type/ref
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :room-reservation/from
     :db/valueType :db.type/instant
     :db/index true
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :room-reservation/to
     :db/valueType :db.type/instant
     :db/index true
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :room-reservation/ref
     :db/valueType :db.type/ref
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}




    {:db/id #db/id[:db.part/db]
     :db/ident :room-booking/public-id
     :db/valueType :db.type/string
     :db/unique :db.unique/value
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :room-booking/user
     :db/valueType :db.type/ref
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}




    {:db/id #db/id[:db.part/user]
     :db/ident :optimistic-add
     :db/doc ":db/add with optimistic locking based on client-t. Filters out null values in the updates map."
     :db/fn #db/fn {:lang "clojure"
                    :params [db client-t eid updates-with-nil]
                    :code (let [updates (filter (fn [[key value]] (not (nil? value))) updates-with-nil)]
                            (doseq [[attr val] updates]
                              (if-let [tx (datomic.api/q '[:find ?tx . :in $ ?eid ?attr :where [?eid ?attr _ ?tx]] db eid attr)]
                                (let [t (datomic.api/tx->t tx)]
                                  (if (> t client-t)
                                    (throw (ex-info (str "Attribute " attr " optimistically locked! Client version is " client-t ", database version is " t ".")
                                                    {:type :optimistic-add
                                                     :attr attr
                                                     :client-t client-t
                                                     :database-t t}))))))

                            (let [client-ent (datomic.api/entity (datomic.api/as-of db client-t) eid)]
                              (->> updates
                                   (filter (fn [[attr val]]
                                             (let [value-type (:db/valueType (datomic.api/entity db attr))]
                                               (if (= value-type :db.type/ref)
                                                 (not= (:db/id (datomic.api/entity db val) (:db/id (attr client-ent))))
                                                 (not= val (attr client-ent))))))
                                   (map (fn [[attr val]] [:db/add eid attr val])))))}}

    {:db/id #db/id[:db.part/user]
     :db/ident :set-room-reservation-range
     :db/doc ":db/add for from/to of a reservation"
     :db/fn #db/fn {:lang "clojure"
                    :params [db eid reservation-ref from to]
                    :code (do
                            (if (<= 0 (compare from to))
                              (throw (Exception. "Cannot create a reservation that ends before it starts")))

                            (let [reservable-room (datomic.api/entity db reservation-ref)]
                              (if-let [conflicting-from (datomic.api/q
                                                         '[:find ?room-reservation .
                                                           :in $ ?from ?to ?reservable-room-e
                                                           :where
                                                           [?room-reservation :room-reservation/reservable-room ?reservable-room-e]
                                                           [?room-reservation :room-reservation/from ?reservation-date-val]
                                                           [(<= ?from ?reservation-date-val)]
                                                           [(> ?to ?reservation-date-val)]]
                                                         db from to (:db/id reservable-room))]
                                (throw (ex-info (str "This reservation conflicts with another reservation (" conflicting-from ")")
                                                {:type :set-room-reservation-range
                                                 :conflicting-reservation-eid conflicting-from
                                                 :conflicting-reservation-from (:room-reservation/from (datomic.api/entity db conflicting-from))})))

                              (if-let [conflicting-to (datomic.api/q
                                                       '[:find ?room-reservation .
                                                         :in $ ?from ?to ?reservable-room-e
                                                         :where
                                                         [?room-reservation :room-reservation/reservable-room ?reservable-room-e]
                                                         [?room-reservation :room-reservation/to ?reservation-date-val]
                                                         [(< ?from ?reservation-date-val)]
                                                         [(>= ?to ?reservation-date-val)]]
                                                       db from to (:db/id reservable-room))]
                                (throw (ex-info (str "This reservation conflicts with another reservation (" conflicting-to ")")
                                                {:type :set-room-reservation-range
                                                 :conflicting-reservation-eid conflicting-to
                                                 :conflicting-reservation-from (:room-reservation/from (datomic.api/entity db conflicting-to))})))

                              [[:db/add eid :room-reservation/from from]
                               [:db/add eid :room-reservation/to to]
                               [:db/add eid :room-reservation/reservable-room (:db/id reservable-room)]]))}}]]}
 :olyp/invoicing-attrs
 {:txes
  [[{:db/id #db/id[:db.part/db]
     :db/ident :rentable-room/public-id
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db/unique :db.unique/value
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :rentable-room/name
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db/unique :db.unique/value
     :db.install/_attribute :db.part/db}




    {:db/id #db/id[:db.part/db]
     :db/ident :customer-room-rental-agreement/customer
     :db/valueType :db.type/ref
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer-room-rental-agreement/rentable-room
     :db/valueType :db.type/ref
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer-room-rental-agreement/monthly-price
     :db/valueType :db.type/bigdec
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer-room-rental-agreement/tax
     :db/valueType :db.type/long
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}




    {:db/id #db/id[:db.part/db]
     :db/ident :customer-room-booking-agreement/customer
     :db/valueType :db.type/ref
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer-room-booking-agreement/reservable-room
     :db/valueType :db.type/ref
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer-room-booking-agreement/hourly-price
     :db/valueType :db.type/bigdec
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer-room-booking-agreement/free-hours
     :db/valueType :db.type/long
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer-room-booking-agreement/tax
     :db/valueType :db.type/long
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}




    {:db/id #db/id[:db.part/db]
     :db/ident :invoice/key
     :db/valueType :db.type/string
     :db/unique :db.unique/value
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice/month
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice/customer
     :db/valueType :db.type/ref
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice/invoice-number
     :db/valueType :db.type/bigint
     :db/unique :db.unique/value
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}




    {:db/id #db/id[:db.part/db]
     :db/ident :invoice-line/public-id
     :db/valueType :db.type/string
     :db/index true
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice-line/invoice-key
     :db/valueType :db.type/string
     :db/index true
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice-line/sort-order
     :db/valueType :db.type/long
     :db/index true
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice-line/quantity
     :db/valueType :db.type/bigdec
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice-line/unit-price
     :db/valueType :db.type/bigdec
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice-line/tax
     :db/valueType :db.type/long
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice-line/product-code
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice-line/description
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}




    {:db/id #db/id[:db.part/user]
     :db/ident :auto-increment-bigint
     :db/doc "MySQL style, baby"
     :db/fn #db/fn {:lang "clojure"
                    :params [db attrs]
                    :code (mapcat
                           (fn [[attr eids]]
                             (let [current (or (d/q '[:find (max ?val) .
                                                      :in $ ?attr
                                                      :where [_ ?attr ?val]]
                                                    db
                                                    attr)
                                               java.math.BigInteger/ONE)]
                               (map-indexed
                                (fn [idx eid]
                                  [:db/add eid attr (.add (java.math.BigInteger/valueOf idx) (.add current java.math.BigInteger/ONE))])
                                eids)))
                           attrs)}}]]}
:olyp/invoicing-attrs-2
 {:txes
  [[{:db/id #db/id[:db.part/db]
     :db/ident :invoice/bookings
     :db/valueType :db.type/ref
     :db/cardinality :db.cardinality/many
     :db.install/_attribute :db.part/db}]]}

:olyp/invoicing-attrs-3
 {:txes
  [[{:db/id #db/id[:db.part/db]
     :db/ident :invoice/text
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice/sum
     :db/valueType :db.type/bigdec
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice-line/sum
     :db/valueType :db.type/bigdec
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}]]}

 :olyp/invoicing-attrs-4
 {:txes
  [[{:db/id :invoice/sum
     :db/ident :invoice/sum-without-tax}

    {:db/id :invoice-line/sum
     :db/ident :invoice-line/sum-without-tax}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice/sum-with-tax
     :db/valueType :db.type/bigdec
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice/total-tax
     :db/valueType :db.type/bigdec
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice-line/sum-with-tax
     :db/valueType :db.type/bigdec
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}]]}

 :olyp/invoicing-attrs-5
 {:txes
  [[{:db/id #db/id[:db.part/db]
     :db/ident :invoice/invoice-date
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :invoice/due-date
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}]]}

 :olyp/public-id-for-agreements
 {:txes
  [[{:db/id #db/id[:db.part/db]
     :db/ident :customer-room-rental-agreement/public-id
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db/unique :db.unique/value
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :customer-room-booking-agreement/public-id
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db/unique :db.unique/value
     :db.install/_attribute :db.part/db}

    {:db/id :invoice-line/public-id
     :db/unique :db.unique/value
     :db.alter/_attribute :db.part/db}]]}

 :olyp/public-id-attr-for-invoices
 {:txes
  [[{:db/id #db/id[:db.part/db]
     :db/ident :invoice/public-id
     :db/valueType :db.type/string
     :db/unique :db.unique/value
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}]]}

 :olyp/adding-comment-to-room-reservation
 {:txes
  [[{:db/id #db/id[:db.part/db]
     :db/ident :room-reservation/comment
     :db/valueType :db.type/string
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}]]}

 :olyp/adding-reservation-batches
 {:txes
  [[{:db/id #db/id[:db.part/db]
     :db/ident :reservation-batch/public-id
     :db/valueType :db.type/string
     :db/unique :db.unique/value
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :reservation-batch/month
     :db/valueType :db.type/string
     :db/unique :db.unique/value
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}

    {:db/id #db/id[:db.part/db]
     :db/ident :room-reservation/reservation-batch
     :db/valueType :db.type/ref
     :db/cardinality :db.cardinality/one
     :db.install/_attribute :db.part/db}]]}}


